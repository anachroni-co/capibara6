apiVersion: apps/v1
kind: Deployment
metadata:
  name: capibara6-api
  namespace: capibara6
  labels:
    app: capibara6-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: capibara6-api
  template:
    metadata:
      labels:
        app: capibara6-api
        version: v1
    spec:
      containers:
      - name: capibara6-api
        image: capibara6:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: ENVIRONMENT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: REDIS_URL
        - name: E2B_API_KEY
          valueFrom:
            secretKeyRef:
              name: capibara6-secrets
              key: E2B_API_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: capibara6-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /app/backend/data
        - name: logs-volume
          mountPath: /app/backend/logs
        - name: models-volume
          mountPath: /app/backend/models
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: capibara6-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: capibara6-logs-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: capibara6-models-pvc
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capibara6-graphql
  namespace: capibara6
  labels:
    app: capibara6-graphql
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: capibara6-graphql
  template:
    metadata:
      labels:
        app: capibara6-graphql
        version: v1
    spec:
      containers:
      - name: capibara6-graphql
        image: capibara6:latest
        ports:
        - containerPort: 8001
          name: http
        command: ["python", "-m", "uvicorn", "backend.graphql.main:app", "--host", "0.0.0.0", "--port", "8001"]
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: ENVIRONMENT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: REDIS_URL
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capibara6-worker
  namespace: capibara6
  labels:
    app: capibara6-worker
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: capibara6-worker
  template:
    metadata:
      labels:
        app: capibara6-worker
        version: v1
    spec:
      containers:
      - name: capibara6-worker
        image: capibara6:latest
        command: ["python", "-m", "rq", "worker", "default", "--url", "redis://redis-service:6379/0"]
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: ENVIRONMENT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: capibara6-config
              key: REDIS_URL
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: data-volume
          mountPath: /app/backend/data
        - name: logs-volume
          mountPath: /app/backend/logs
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: capibara6-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: capibara6-logs-pvc
      restartPolicy: Always
